



PQUIP                                                           T. Reddy
Internet-Draft                                                     Nokia
Intended status: Informational                         23 September 2025
Expires: 27 March 2026


   Guidance for Migration to Composite, Dual-Certificate, or PQ-Only
                             Authentication
            draft-reddy-pquip-pqc-signature-migration-latest

Abstract

   This document provides guidance for migration from traditional
   digital signature algorithms to post-quantum cryptographic (PQC)
   signature algorithms.  It compares three models under discussion in
   the IETF for PKI-based protocols: composite signatures, dual
   certificates, and PQ-only certificates.  The goal is to help
   operators and engineers working on cryptographic libraries, network
   security, and PKI/key management infrastructure select an approach
   that balances interoperability, security, and operational efficiency
   during the transition to post-quantum authentication.

Discussion Venues

   This note is to be removed before publishing as an RFC.

   Discussion of this document takes place on the Post-Quantum Use In
   Protocols Working Group mailing list (pqc@ietf.org), which is
   archived at https://mailarchive.ietf.org/arch/browse/pqc/.

   Source for this draft and an issue tracker can be found at
   https://github.com/tireddy2/pqc-cert-guidance.

Status of This Memo

   This Internet-Draft is submitted in full conformance with the
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF).  Note that other groups may also distribute
   working documents as Internet-Drafts.  The list of current Internet-
   Drafts is at https://datatracker.ietf.org/drafts/current/.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   This Internet-Draft will expire on 27 March 2026.

Copyright Notice

   Copyright (c) 2025 IETF Trust and the persons identified as the
   document authors.  All rights reserved.

   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents (https://trustee.ietf.org/
   license-info) in effect on the date of publication of this document.
   Please review these documents carefully, as they describe your rights
   and restrictions with respect to this document.  Code Components
   extracted from this document must include Revised BSD License text as
   described in Section 4.e of the Trust Legal Provisions and are
   provided without warranty as described in the Revised BSD License.

Table of Contents

   1.  Introduction
   2.  Conventions and Definitions
   3.  Motivation for PQC Signatures
   4.  Composite Signatures
     4.1.  Advantages
     4.2.  Disadvantages
   5.  Dual Certificates
     5.1.  Advantages
     5.2.  Disadvantages
   6.  PQ-Only Certificates
     6.1.  Advantages
     6.2.  Disadvantages
   7.  Negotiation of Authentication Schemes
   8.  Operational and Ecosystem Considerations
     8.1.  Trust Anchors and Transitions
     8.2.  Multiple Transitions and Crypto-Agility
     8.3.  Support from Hardware Security Modules (HSMs)
     8.4.  Constrained Devices and IoT Environments
   9.  Transition Considerations
     9.1.  Composite Certificates
     9.2.  Dual Certificates
     9.3.  Loss of Strong Unforgeability in Composite and Dual
           Certificates
   10. Migration Guidance
   11. Use of SLH-DSA in PQ-Only Deployments
   12. Security Considerations
     12.1.  Downgrade Attacks
     12.2.  Strong Unforgeability versus Existential Unforgeability
     12.3.  Operational Risks
   13. IANA Considerations
   14. Acknowledgments
   15. References
     15.1.  Normative References
     15.2.  Informative References
   Author's Address

1.  Introduction

   The emergence of cryptographically relevant quantum computer (CRQC)
   poses a threat to widely deployed public-key algorithms such as RSA
   and elliptic-curve cryptography (ECC).  Post-quantum algorithms are
   being standardized by NIST and other bodies, but migration is not
   immediate.  In the meantime, protocols need to ensure that
   authentication mechanisms remain secure against both classical and
   quantum adversaries.

   For data authentication, the primary concern is the risk of on-path
   attackers equipped with CRQCs.  Such adversaries could break
   certificate-based mechanisms that rely on traditional algorithms
   (e.g., RSA, ECDSA), allowing them to impersonate servers and mount
   man-in-the-middle (MitM) attacks.  In this scenario, attackers could
   also suppress PQC certificates and present only traditional ones,
   enabling downgrades.  These risks highlight the need to transition
   away from traditional signatures and adopt post-quantum algorithms
   for certificate-based authentication.

   The IETF has developed two hybrid transition models for use in TLS,
   IKEv2/IPsec, JOSE/COSE, and PKIX:

   *  Composite signatures – A single certificate, key, and signature
      that combines traditional and PQ algorithms
      [I-D.ietf-lamps-pq-composite-sigs].
   *  Dual certificates – Two separate certificates, one traditional and
      one PQ algorithm, that are bound together and validated jointly
      ([RFC9763]).

   Another approach is using a Post-Quantum certificate,

   *  PQ-only certificates – A certificate or signature that uses only a
      PQ algorithm ([I-D.ietf-lamps-dilithium-certificates] for ML-DSA
      and [I-D.ietf-lamps-x509-slhdsa] for SLH-DSA).

   This document provides guidance on selecting among the two hybrid
   certificate models and the PQ-only model depending on the deployment
   context, the readiness of the supporting ecosystem, and security
   requirements.

2.  Conventions and Definitions

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and
   "OPTIONAL" in this document are to be interpreted as described in
   BCP 14 [RFC2119] [RFC8174] when, and only when, they appear in all
   capitals, as shown here.

   Composite: A key, certificate, or signature that merges traditional
   and PQ algorithms into one object.  Dual certificates: Two
   independent certificates (traditional and PQ) issued for the same
   identity, presented and validated together.  PQ-only: A certificate
   or signature using only a PQ algorithm.

3.  Motivation for PQC Signatures

   Unlike "Harvest Now, Decrypt Later" attacks that target
   confidentiality, this risk directly impacts authentication and trust.
   Once a CRQC is available, the continued use of traditional
   certificates becomes untenable.  In practice, however, the
   availability of a CRQC may not be publicly disclosed.  Similar to a
   zero-day vulnerability, an adversary could secretly exploit CRQC
   capabilities to compromise traditional certificates without alerting
   the wider ecosystem.

   Addressing this risk requires replacing traditional signatures with
   PQC signatures, which in turn demands ecosystem-wide upgrades
   involving cryptographic libraries, HSMs, CAs, intermediate CAs, and
   dependent protocols.  Because these transitions take years of
   planning, coordination, and investment, preparations must begin well
   before a CRQC is publicly known.

4.  Composite Signatures

   A composite certificate contains both a traditional public key
   algorithm (e.g., ECDSA) and a post-quantum algorithm (e.g., ML-DSA)
   within a single X.509 certificate.  This design enables both
   algorithms to be used in parallel, the traditional component ensures
   compatibility with existing infrastructure, while the post-quantum
   component introduces resistance against future quantum attacks.

   Composite certificates are defined in
   [I-D.ietf-lamps-pq-composite-sigs].  These combine Post-Quantum
   algorithms like ML-DSA with traditional algorithms such as RSA-
   PKCS#1v1.5, RSA-PSS, ECDSA, Ed25519, or Ed448, to provide additional
   protection against vulnerabilities or implementation bugs in a single
   algorithm.  [I-D.reddy-tls-composite-mldsa] specifies how composite
   signatures, including ML-DSA, are used for TLS 1.3 authentication.
   Composite-trust clients validate a single chain anchored in a
   composite root, without needing parallel chains.

4.1.  Advantages

   *  A single certificate chain is used for both traditional and post-
      quantum keys, simplifying certificate management.
   *  A single composite signature, rooted in one intermediate
      certificate chain, reduces protocol message size compared to
      transmitting multiple separate signatures, each of which would
      require its own certificate chain.
   *  No need to manage or validate multiple parallel certificate
      chains.
   *  No major changes to the base protocol are required to support the
      composite signature approach.

4.2.  Disadvantages

   *  Requires endpoints, relying parties, and CAs to support composite
      public keys and composite signature verification, which are not
      widely deployed at the time of writing of the specification.
   *  Introduces new certificate formats and verification logic that
      will need updates to PKI infrastructure.
   *  Expands the migration landscape to multiple transition paths:
      1.  Traditional-only,
      2.  Composite (classical + PQ),
      3.  PQ-only.  In contrast, the dual certificate approach requires
          only two paths (traditional and PQ).

   Note that PQ→PQ migration (changing between PQ algorithms or
   parameter sets) is required in both composite and dual-certificate
   approaches.

5.  Dual Certificates

   Dual certificates rely on issuing two separate certificates for the
   same identity: one with a traditional algorithm (e.g., RSA or ECDSA)
   and one with a post-quantum algorithm (e.g., ML-DSA).  Both
   certificates are presented and validated during authentication,
   providing hybrid assurance without requiring new certificate formats.

5.1.  Advantages

   *  Uses standard, single-algorithm X.509 certificates and chains,
      maximizing compatibility with existing PKI infrastructures.
   *  Maintains clear separation between traditional and post-quantum
      keys.
   *  Requires no changes to certificate validation logic.

5.2.  Disadvantages

   *  Increases protocol message size due to the transmission of
      multiple certificate chains and signatures.
   *  Requires management of multiple certificates.
   *  Requires major changes to the base protocol to support dual
      certificate binding and validation.
   *  Complicates debuggability and troubleshooting, since validation
      failures may arise from either chain.

6.  PQ-Only Certificates

   PQ-only certificates represent the final stage of migration.  They
   use only a post-quantum algorithm and provide no fallback to
   traditional algorithms.

6.1.  Advantages

   *  Simpler model without the complexity of hybrid mechanisms.
   *  Forward-looking design, avoiding eventual deprecation of
      traditional algorithms.
   *  Reduced operational burden compared to managing dual or composite
      certificates.

6.2.  Disadvantages

   *  Risk if a deployed PQ algorithm is broken due to a bug.
   *  No interoperability with legacy systems that only support
      traditional algorithms.
   *  Deployment is only feasible once PQ algorithms are standardized
      and broadly supported across the ecosystem.

7.  Negotiation of Authentication Schemes

   During the transition, endpoints may support multiple authentication
   schemes (e.g., traditional, composite, dual, or PQ-only).  Clients
   advertise their supported schemes using the protocol’s negotiation
   mechanism (for example, the signature_algorithms extension in TLS
   [RFC8446]), and servers select from the client’s list or fail the
   authentication if no common option is available.  In practice,
   deployments are expected to prefer PQ-only or hybrid (composite or
   dual) schemes over traditional ones, with the choice between PQ-only
   and hybrid influenced by regulatory mandates or by whether defense-
   in-depth is prioritized.

8.  Operational and Ecosystem Considerations

   Migration to post-quantum authentication requires addressing broader
   ecosystem dependencies, including trust anchors, hardware security
   modules, and constrained devices.

8.1.  Trust Anchors and Transitions

   Trust anchors represent the ultimate root of trust in a PKI.  If
   existing trust anchors are RSA or ECC-based, then new PQ-capable
   trust anchors will need to be distributed.  Operators will have to
   plan for a phased introduction of PQ trust anchors, which may
   involve:

   *  Rolling out hybrid trust anchors that support both traditional and
      PQC signatures.
   *  Establishing parallel trust anchor hierarchies and phasing out the
      traditional hierarchy once PQ adoption is universal.
   *  Ensuring secure and authenticated distribution of updated trust
      anchors to clients, especially devices that cannot be easily
      updated.

   Deployments migrating from traditional to post-quantum authentication
   may have to operate with multiple trust anchors for a period of time.
   A new PQ or composite root may be introduced while the existing
   traditional root remains in place, leading to different trust chain
   models:

   *  Traditional chain: anchored in a Traditional root (e.g., RSA/
      ECDSA).
   *  PQ chain: anchored in a PQ root (e.g., ML-DSA, SLH-DSA).
   *  Composite chain: anchored in a composite root, with intermediates
      signed using composite algorithms that combine traditional and PQ.
      This forms a distinct new chain, rather than two parallel ones.

   During this coexistence phase, clients generally fall into five
   categories:

   1.  Legacy-only: trust only traditional roots and support only
       traditional algorithms.
   2.  Mixed: trust only traditional roots but support both classical
       and PQ algorithms.  These clients can validate PQ certificates
       only if a PQ intermediate is cross-signed by a traditional root.
   3.  Dual-trust: trust both traditional and PQ roots, supporting both
       algorithm families.
   4.  Composite-trust: trusts composite root and support composite
       algorithms, validating a single chain that integrates traditional
       and PQ signatures.
   5.  PQ-only: trust only PQ roots and support only PQ algorithms.

   The main challenge is that servers cannot easily distinguish between
   mixed clients (2) and dual-trust clients (3), since both advertise PQ
   algorithms, but only dual-trust clients actually recognize PQ roots.
   To ensure compatibility with mixed clients (2), servers may default
   to sending longer PQ chains that include a cross-signed PQ root
   (i.e., a PQ root certificate signed by a traditional root).  However,
   this is unnecessary for dual-trust clients (3), which already trust
   the PQ root directly, and it results in increased message size.

   [I-D.ietf-tls-trust-anchor-ids] (TAI) addresses this problem by
   allowing clients to indicate, on a per-connection basis, which trust
   anchors they recognize.  Servers can use that information to select a
   compatible certificate chain, reducing unnecessary chain elements and
   providing operators with better telemetry on PQC adoption.  TAI also
   enables PQ-capable clients to tell PQ-aware servers exactly which PQ
   trust anchors they recognize, while still supporting traditional
   roots for compatibility with legacy servers.

   In all cases, the long-term goal is a transition to PQ-only roots and
   certificate chains.  Composite and dual-certificate approaches help
   bridge the gap, but operators will have to plan carefully for the
   eventual retirement of traditional and composite roots once PQ
   adoption is widespread.

8.2.  Multiple Transitions and Crypto-Agility

   Post-quantum migration is not a single event.  There may be multiple
   transitions over time, as:

   *  Traditional signature algorithms are gradually retired.
   *  Initial PQC signature algorithms are standardized and deployed.
   *  New PQC signature algorithms may replace early ones due to
      cryptanalysis or efficiency improvements.

   Protocols and infrastructures will have to be designed with crypto-
   agility in mind, supporting:

   *  Negotiation of standalone PQC algorithms and PQ/T.
   *  Phased migration paths, including initial use of PQ/T, eventual
      transition to PQ-only certificates, and later migration to new PQ
      algorithms as cryptanalysis or security policy guidance evolves.
   *  Protection against downgrade attacks across all transition phases.

8.3.  Support from Hardware Security Modules (HSMs)

   Many organizations rely on HSMs for secure key storage and
   operations.  Challenges include:

   *  HSMs must be upgraded to support PQ algorithms and, where
      relevant, composite or dual key management models.
   *  PQC algorithms often have larger key sizes and signatures,
      requiring sufficient memory and processing capability in HSMs.
   *  For dual-certificate deployments, HSMs can manage the underlying
      traditional and PQ private keys independently, and no API changes
      are required.  The application layer is responsible for
      coordinating how signatures from both keys are used.  By contrast,
      supporting composite keys and composite signing operations may
      require HSM and API extensions to represent composite key objects
      and perform multi-algorithm signing atomically.

   Without HSM vendor support for PQC, migration may be delayed or
   require software-based fallback solutions, which will weaken
   security.

8.4.  Constrained Devices and IoT Environments

   Constrained environments, such as IoT devices, present unique
   challenges for PQC deployment.  A broad set of challenges and
   potential mitigations is described in
   [I-D.ietf-pquip-pqc-hsm-constrained], which analyzes PQC deployment
   in resource-constrained devices and hardware security modules.

9.  Transition Considerations

   Determining whether and when to adopt PQC-only certificates, hybrid
   certificates, or dual certificates depends on several factors,
   including:

   *  Frequency and duration of system upgrades
   *  The expected timeline for CRQC availability
   *  Operational flexibility to enable or disable algorithms
   *  Availability of automated certificate provisioning mechanisms
      (e.g., ACME [RFC8555])

   Deployments with limited flexibility benefit from composite or dual
   certificates.  These approaches mitigate risks associated with delays
   in transitioning to PQC and provide an immediate safeguard against
   zero-day vulnerabilities.  Both approaches improve resilience during
   migration, but they do so in different ways and carry different
   operational trade-offs.

   Composite or dual certificates enhance resilience during the adoption
   of PQC by:

   *  Providing defense in depth: security is maintained as long as
      either the PQ or traditional algorithm remains unbroken.
   *  Reducing exposure to unforeseen vulnerabilities: immediate
      protection against weaknesses in PQC algorithms.

   However, each approach comes with long-term implications.

9.1.  Composite Certificates

   Composite certificates embed both a traditional and a PQC algorithm
   into a single certificate and signature.  However, once a traditional
   algorithm is no longer secure against CRQCs, it must be deprecated.
   For discussion of the security impact in security protocols (e.g.,
   TLS, IKEv2) versus artifact-signing use cases, see
   Section Section 9.3.

   To complete the transition to a fully quantum-resistant
   authentication model, operators will need to provision a new root CA
   certificate that uses only a PQC signature algorithm and public key.
   This new root CA would issue a hierarchy of intermediate
   certificates, each also signed using a PQC algorithm, ultimately
   leading to end-entity certificates that contain only PQC public keys
   and are signed with PQC algorithms.

   Protocol configurations (e.g., TLS, IKEv2) will likewise need to be
   updated to negotiate only PQC-based authentication, ensuring that the
   entire certification path and protocol handshake are
   cryptographically resistant to quantum attacks and no longer depend
   on any traditional algorithms.

9.2.  Dual Certificates

   When CRQCs become available, the traditional certificate chain will
   no longer be secure.  At that point, the traditional chain must be
   removed, and the protocol configuration updated so that only the PQC
   certificate chain is presented and validated.  This requires careful
   coordination during the transition, since legacy clients that cannot
   process PQC certificates will lose access once the traditional chain
   is withdrawn.  Dual-certificate deployments therefore defer, but do
   not avoid, the need to update protocol configurations and move to a
   PQ-only environment.

9.3.  Loss of Strong Unforgeability in Composite and Dual Certificates

   A deployment may choose to continue using a composite or dual-
   certificate configuration even after a traditional algorithm has been
   broken by the advent of a CRQC.  While this may simplify operations
   by avoiding re-provisioning of trust anchors, it introduces a
   significant risk: security properties degrade once one component of
   the hybrid is no longer secure.

   In composite certificates, the composite signature will no longer
   achieve Strong Unforgeability (SUF) (see Section 10.1.1 of
   [I-D.ietf-pquip-pqc-engineers] and Section 10.2 of
   [I-D.ietf-lamps-pq-composite-sigs]).  A CRQC can forge the broken
   traditional signature component (s1_) over a message (m).  That
   forged component can then be combined with the valid post-quantum
   component (s2) to produce a new composite signature (m, (s1_, s2))
   that verifies successfully, thereby violating SUF.

   In dual-certificate deployments where the client requires both a
   traditional and a PQ chain, the SUF property is likewise not achieved
   once the traditional algorithm is broken.

   In protocols such as TLS and IKEv2/IPsec, a composite signature
   remains secure against impersonation as long as at least one
   component algorithm remains unbroken, because verification succeeds
   only if every component signature validates over the same canonical
   message defined by the authentication procedure.  However, in
   artifact signing use cases, the break of a single component does not
   enable forgery of a composite signature but does enable
   "repudiation": multiple distinct composite signatures can exist for
   the same artifact, undermining the “one signature, one artifact”
   guarantee.  This creates ambiguity about which composite signature is
   authentic, complicating long-term non-repudiation guarantees.

10.  Migration Guidance

   *  Experimental (individual drafts): Dual certificates have been
      proposed as a migration mechanism (e.g.,
      [I-D.hu-ipsecme-pqt-hybrid-auth], [I-D.yusef-tls-pqt-dual-certs],
      [I-D.bonnell-lamps-chameleon-certs]), but at the time of writing
      none of the relevant IETF working groups have adopted this
      approach.  Dual certificates require significant protocol changes
      to bind and validate both certificates correctly (e.g., extensions
      in TLS, multiple CERT payload handling in IKEv2).
   *  Medium-term (standards-track): Composite signatures enable tighter
      integration once ecosystem support (PKIX, IPSec, JOSE/COSE, TLS)
      is mature.  Composite signatures are already being standardized in
      the LAMPS WG ([I-D.ietf-lamps-pq-composite-sigs]) and leveraged in
      [I-D.reddy-tls-composite-mldsa] for TLS,
      [I-D.hu-ipsecme-pqt-hybrid-auth] for IPsec/IKEv2, and
      [I-D.prabel-jose-pq-composite-sigs] for JOSE/COSE.
   *  Long-term: PQ-only certificates are the final goal, once PQ
      algorithms are well-established, trust anchors have been updated,
      HSMs and devices natively support PQ operations, and traditional
      algorithms are fully retired.  Work to enable PQC signatures is
      already underway in JOSE/COSE [I-D.ietf-cose-dilithium], TLS
      [I-D.ietf-tls-mldsa], and IPsec [I-D.ietf-ipsecme-ikev2-pqc-auth].

11.  Use of SLH-DSA in PQ-Only Deployments

   SLH-DSA does not introduce any new hardness assumptions beyond those
   inherent to its underlying hash functions.  It builds upon
   established cryptographic foundations, making it a reliable and
   robust digital signature scheme for a post-quantum world.  While
   attacks on lattice-based schemes such as ML-DSA are currently
   hypothetical, if realized they could compromise the security of those
   schemes.  SLH-DSA would remain unaffected by such attacks due to its
   distinct mathematical foundations, helping to ensure the ongoing
   security of systems and protocols that rely on it for digital
   signatures.  Unlike ML-DSA, SLH-DSA is not defined for use in
   composite certificates and is intended to be deployed directly in PQ-
   only certificate hierarchies.

   SLH-DSA may be used for both end-entity and CA certificates.  It
   provides strong post-quantum security but produces larger signatures
   than ML-DSA or traditional algorithms.  At security levels 1, 3, and
   5, two parameter sets are available:

   *  "Small" (s) variants minimize signature size, ranging from 7856
      bytes (128-bit) to 29792 bytes (256-bit).
   *  "Fast" (f) variants optimize key generation and signing speed,
      with signature sizes from 17088 bytes (128-bit) to 29792 bytes
      (256-bit), but slower verification performance.

   Because of these large signatures, SLH-DSA will increase handshake
   size in protocols such as TLS 1.3 or IKEv2.  However, the impact on
   performance is minimal for long-lived connections or large data
   transfers, where handshake overhead is amortized over session
   duration (e.g., DTLS-in-SCTP in 3GPP N2 interfaces, or signature
   authentication in IKEv2 using PQC [I-D.ietf-ipsecme-ikev2-pqc-auth]).

   In deployments where minimizing handshake size is critical, operators
   may prefer SLH-DSA for root and intermediate certificates while using
   smaller- signature algorithms (e.g., ML-DSA) in end-entity
   certificates or in the "CertificateVerify" message.

   Mechanisms such as Abridged TLS Certificate Chains
   [I-D.ietf-tls-cert-abridge] and Suppressing CA Certificates
   [I-D.kampanakis-tls-scas-latest] reduce handshake size by limiting
   certificate exchange to only end-entity certificates.  In such cases,
   intermediate certificates are assumed to be known to the peer,
   allowing the use of larger signature algorithms like SLH-DSA for
   those certificates without adding overhead to the handshake.

12.  Security Considerations

   Hybrid approaches (composite or dual certificates) are designed to
   provide defense in depth during the migration to PQC.  Their goal is
   to ensure that authentication remains secure as long as at least one
   of the algorithms in use remains unbroken.  However, several
   important security considerations arise.

12.1.  Downgrade Attacks

   Implementations must ensure downgrade protection so that an adversary
   cannot suppress PQ or hybrid certificates and force reliance solely
   on traditional algorithms.  This is especially important in scenarios
   where a CRQC is available but not publicly disclosed.  Without
   downgrade protection, a MitM attacker could impersonate servers by
   presenting only traditional certificates even when PQC certificates
   are supported.

12.2.  Strong Unforgeability versus Existential Unforgeability

   In composite and dual-certificate deployments, once one component
   algorithm is broken (e.g., the traditional algorithm under a CRQC),
   the overall scheme no longer achieves SUF.  While Existential
   Unforgeability (EUF) is still preserved by the PQ component, the loss
   of SUF means that hybrid mechanisms will have be retired once
   traditional algorithms are no longer secure.

12.3.  Operational Risks

   Managing multiple certificate paths (composite, dual, and PQ-only)
   increases the risk of misconfiguration and operational errors.  For
   example, a server might continue using a hybrid scheme after the
   traditional algorithm is broken, fail to revoke traditional
   certificates that are no longer secure, or misconfigure chain
   selection so that clients receive an incompatible path.  Clear
   operational guidance and automated monitoring are essential to
   minimize these risks.  Operators need best practices for certificate
   lifecycle and migration planning, along with automated checks to
   ensure PQC chains remain present, valid, and not replaced by weaker
   alternatives.

13.  IANA Considerations

   This document has no IANA actions.

14.  Acknowledgments

   TODO

15.  References

15.1.  Normative References

   [I-D.ietf-cose-dilithium]
              Prorock, M. and O. Steele, "ML-DSA for JOSE and COSE",
              Work in Progress, Internet-Draft, draft-ietf-cose-
              dilithium-09, 12 September 2025,
              <https://datatracker.ietf.org/doc/html/draft-ietf-cose-
              dilithium-09>.

   [I-D.ietf-ipsecme-ikev2-pqc-auth]
              Reddy.K, T., Smyslov, V., and S. Fluhrer, "Signature
              Authentication in the Internet Key Exchange Version 2
              (IKEv2) using PQC", Work in Progress, Internet-Draft,
              draft-ietf-ipsecme-ikev2-pqc-auth-03, 29 August 2025,
              <https://datatracker.ietf.org/doc/html/draft-ietf-ipsecme-
              ikev2-pqc-auth-03>.

   [I-D.ietf-lamps-dilithium-certificates]
              Massimo, J., Kampanakis, P., Turner, S., and B.
              Westerbaan, "Internet X.509 Public Key Infrastructure -
              Algorithm Identifiers for the Module-Lattice-Based Digital
              Signature Algorithm (ML-DSA)", Work in Progress, Internet-
              Draft, draft-ietf-lamps-dilithium-certificates-12, 26 June
              2025, <https://datatracker.ietf.org/doc/html/draft-ietf-
              lamps-dilithium-certificates-12>.

   [I-D.ietf-lamps-pq-composite-sigs]
              Ounsworth, M., Gray, J., Pala, M., Klaußner, J., and S.
              Fluhrer, "Composite ML-DSA for use in X.509 Public Key
              Infrastructure", Work in Progress, Internet-Draft, draft-
              ietf-lamps-pq-composite-sigs-08, 20 September 2025,
              <https://datatracker.ietf.org/doc/html/draft-ietf-lamps-
              pq-composite-sigs-08>.

   [I-D.ietf-lamps-x509-slhdsa]
              Bashiri, K., Fluhrer, S., Gazdag, S., Van Geest, D., and
              S. Kousidis, "Internet X.509 Public Key Infrastructure:
              Algorithm Identifiers for SLH-DSA", Work in Progress,
              Internet-Draft, draft-ietf-lamps-x509-slhdsa-09, 30 June
              2025, <https://datatracker.ietf.org/doc/html/draft-ietf-
              lamps-x509-slhdsa-09>.

   [I-D.ietf-pquip-pqc-hsm-constrained]
              Reddy.K, T., Wing, D., S, B., and K. Kwiatkowski,
              "Adapting Constrained Devices for Post-Quantum
              Cryptography", Work in Progress, Internet-Draft, draft-
              ietf-pquip-pqc-hsm-constrained-01, 4 July 2025,
              <https://datatracker.ietf.org/doc/html/draft-ietf-pquip-
              pqc-hsm-constrained-01>.

   [I-D.ietf-tls-mldsa]
              Hollebeek, T., Schmieg, S., and B. Westerbaan, "Use of ML-
              DSA in TLS 1.3", Work in Progress, Internet-Draft, draft-
              ietf-tls-mldsa-00, 16 May 2025,
              <https://datatracker.ietf.org/doc/html/draft-ietf-tls-
              mldsa-00>.

   [I-D.ietf-tls-trust-anchor-ids]
              Beck, B., Benjamin, D., O'Brien, D., and K. Nekritz, "TLS
              Trust Anchor Identifiers", Work in Progress, Internet-
              Draft, draft-ietf-tls-trust-anchor-ids-02, 15 September
              2025, <https://datatracker.ietf.org/doc/html/draft-ietf-
              tls-trust-anchor-ids-02>.

   [I-D.reddy-tls-composite-mldsa]
              Reddy.K, T., Hollebeek, T., Gray, J., and S. Fluhrer, "Use
              of Composite ML-DSA in TLS 1.3", Work in Progress,
              Internet-Draft, draft-reddy-tls-composite-mldsa-05, 4 July
              2025, <https://datatracker.ietf.org/doc/html/draft-reddy-
              tls-composite-mldsa-05>.

   [RFC2119]  Bradner, S., "Key words for use in RFCs to Indicate
              Requirement Levels", BCP 14, RFC 2119,
              DOI 10.17487/RFC2119, March 1997,
              <https://www.rfc-editor.org/rfc/rfc2119>.

   [RFC8174]  Leiba, B., "Ambiguity of Uppercase vs Lowercase in RFC
              2119 Key Words", BCP 14, RFC 8174, DOI 10.17487/RFC8174,
              May 2017, <https://www.rfc-editor.org/rfc/rfc8174>.

   [RFC8446]  Rescorla, E., "The Transport Layer Security (TLS) Protocol
              Version 1.3", RFC 8446, DOI 10.17487/RFC8446, August 2018,
              <https://www.rfc-editor.org/rfc/rfc8446>.

   [RFC9763]  Becker, A., Guthrie, R., and M. Jenkins, "Related
              Certificates for Use in Multiple Authentications within a
              Protocol", RFC 9763, DOI 10.17487/RFC9763, June 2025,
              <https://www.rfc-editor.org/rfc/rfc9763>.

15.2.  Informative References

   [I-D.bonnell-lamps-chameleon-certs]
              Bonnell, C., Gray, J., Hook, D., Okubo, T., and M.
              Ounsworth, "A Mechanism for Encoding Differences in Paired
              Certificates", Work in Progress, Internet-Draft, draft-
              bonnell-lamps-chameleon-certs-06, 16 April 2025,
              <https://datatracker.ietf.org/doc/html/draft-bonnell-
              lamps-chameleon-certs-06>.

   [I-D.hu-ipsecme-pqt-hybrid-auth]
              Hu, J., Morioka, Y., and G. WANG, "Post-Quantum
              Traditional (PQ/T) Hybrid PKI Authentication in the
              Internet Key Exchange Version 2 (IKEv2)", Work in
              Progress, Internet-Draft, draft-hu-ipsecme-pqt-hybrid-
              auth-02, 1 May 2025,
              <https://datatracker.ietf.org/doc/html/draft-hu-ipsecme-
              pqt-hybrid-auth-02>.

   [I-D.ietf-pquip-pqc-engineers]
              Banerjee, A., Reddy.K, T., Schoinianakis, D., Hollebeek,
              T., and M. Ounsworth, "Post-Quantum Cryptography for
              Engineers", Work in Progress, Internet-Draft, draft-ietf-
              pquip-pqc-engineers-14, 25 August 2025,
              <https://datatracker.ietf.org/doc/html/draft-ietf-pquip-
              pqc-engineers-14>.

   [I-D.ietf-tls-cert-abridge]
              Jackson, D., "Abridged Compression for WebPKI
              Certificates", Work in Progress, Internet-Draft, draft-
              ietf-tls-cert-abridge-02, 16 September 2024,
              <https://datatracker.ietf.org/doc/html/draft-ietf-tls-
              cert-abridge-02>.

   [I-D.kampanakis-tls-scas-latest]
              Kampanakis, P., Bytheway, C., Westerbaan, B., and M.
              Thomson, "Suppressing CA Certificates in TLS 1.3", Work in
              Progress, Internet-Draft, draft-kampanakis-tls-scas-
              latest-03, 5 January 2023,
              <https://datatracker.ietf.org/doc/html/draft-kampanakis-
              tls-scas-latest-03>.

   [I-D.prabel-jose-pq-composite-sigs]
              Prabel, L., Shuzhou, S., Gray, J., and T. Reddy.K, "PQ/T
              Hybrid Composite Signatures for JOSE and COSE", Work in
              Progress, Internet-Draft, draft-prabel-jose-pq-composite-
              sigs-04, 22 August 2025,
              <https://datatracker.ietf.org/doc/html/draft-prabel-jose-
              pq-composite-sigs-04>.

   [I-D.yusef-tls-pqt-dual-certs]
              Shekh-Yusef, R., Tschofenig, H., Ounsworth, M., Sheffer,
              Y., Reddy.K, T., and Y. Rosomakho, "Post-Quantum
              Traditional (PQ/T) Hybrid Authentication with Dual
              Certificates in TLS 1.3", Work in Progress, Internet-
              Draft, draft-yusef-tls-pqt-dual-certs-00, 18 June 2025,
              <https://datatracker.ietf.org/doc/html/draft-yusef-tls-
              pqt-dual-certs-00>.

   [RFC8555]  Barnes, R., Hoffman-Andrews, J., McCarney, D., and J.
              Kasten, "Automatic Certificate Management Environment
              (ACME)", RFC 8555, DOI 10.17487/RFC8555, March 2019,
              <https://www.rfc-editor.org/rfc/rfc8555>.

Author's Address

   Tirumaleswar Reddy
   Nokia
   Bangalore
   Karnataka
   India
   Email: kondtir@gmail.com
